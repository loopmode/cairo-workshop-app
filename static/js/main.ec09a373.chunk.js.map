{"version":3,"sources":["pages/Dashboard.tsx","model/slices/todos.ts","components/TodoList/TodoList.tsx","components/TodoList/AddTodoForm.tsx","pages/TodoListPage.tsx","pages/BoardPage.tsx","model/slices/auth.ts","model/api/auth.ts","components/LoginForm/LoginForm.tsx","hooks/useAuthenticated.ts","pages/LoginPage.tsx","components/UserList/views.js","components/UserList/utils.js","components/UserList/UserList.func.js","components/UserList/UserList.class.js","pages/UsersPage.tsx","pages/CountersPage.tsx","components/ProtectedRoute/ProtectedRoute.js","components/LogoutButton/LogoutButton.tsx","components/HeaderLogin/HeaderLogin.tsx","pages/swapi/SwapiPeopleSearchPage.js","pages/swapi/SwapiPeopleResultPage.js","pages/swapi/SwapiPage.js","App.styled.tsx","App.tsx","serviceWorker.ts","model/utils.ts","model/reducers/counter.ts","model/rootReducer.ts","model/store.ts","index.tsx"],"names":["Dashboard","todosSlice","createSlice","name","initialState","reducers","addTodo","state","action","payload","id","removeTodo","toggleTodo","todo","completed","actions","TodoList","dispatch","useDispatch","todos","useSelector","Object","values","map","className","key","type","onChange","text","style","marginLeft","onClick","AddTodoForm","React","useState","value","setValue","handleAddTodo","event","preventDefault","Date","now","createTodo","onSubmit","e","target","TodoListPage","BoardPage","authSlice","isAuthenticated","user","error","loginError","loginSuccess","logoutError","logoutSuccess","registerSuccess","registerError","wait","delay","Promise","resolve","setTimeout","email","password","LoginForm","auth","setState","handleChange","a","Math","random","fakeAuth","signin","toString","autoComplete","required","signup","useAuthenticated","LoginPage","location","useLocation","history","useHistory","from","useEffect","push","UserListView","users","username","UserListFilterView","filterUsers","filter","toLowerCase","match","UserList","url","process","allUsers","visibleUsers","loadUsers","useCallback","axios","get","data","prevState","applyFilter","this","Component","UsersPage","CountersPage","href","Counter","ProtectedRoute","fallback","props","to","pathname","LogoutButton","redirect","signout","HeaderLogin","urlUtils","getParams","str","qs","parse","ignoreQueryPrefix","getSearchTerm","searchTerm","getPageNumber","page","getIdFromUrl","parts","split","length","results","isLoading","previous","next","SwapiPeopleSearchPage","handleFormSubmit","encodeURIComponent","handleInputChange","handleQueryParams","search","prevProps","abortFetch","disabled","result","queryString","controller","AbortController","signal","abort","params","format","apiUrl","stringify","addQueryPrefix","fetch","response","json","console","defaultProps","SwapiPeopleResultPage","SwapiPage","exact","path","component","StyledLink","styled","NavLink","special","StyledApp","div","App","Boolean","window","hostname","createNamedWrapperReducer","reducerFunction","reducerName","undefined","counter","rootReducer","combineReducers","authReducer","todosReducer","counterA","counterB","counterC","store","configureStore","reducer","navigator","serviceWorker","ready","then","registration","unregister","catch","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec09a373.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Dashboard = () => {\n  return (\n    <div>\n      <h1>Hello!</h1>\n    </div>\n  );\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type TodosSlice = {\n  [id: string]: Todo;\n};\nexport type Todo = {\n  id: string;\n  text: string;\n  completed: boolean;\n};\n\nconst initialState: TodosSlice = {};\n\nconst todosSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {\n    addTodo(state, action: PayloadAction<Todo>) {\n      state[action.payload.id] = action.payload;\n    },\n    removeTodo(state, { payload: id }: PayloadAction<string>) {\n      delete state[id];\n    },\n    toggleTodo(state, { payload: id }: PayloadAction<string>) {\n      const todo = state[id];\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n  }\n});\nexport const { addTodo, removeTodo, toggleTodo } = todosSlice.actions;\nexport default todosSlice.reducer;\n\nexport function createTodo(\n  text: string = \"\",\n  id: string = `${Date.now()}`\n): Todo {\n  return {\n    id,\n    text,\n    completed: false\n  };\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../model/rootReducer\";\nimport { removeTodo, toggleTodo, TodosSlice } from \"../../model/slices/todos\";\n\nexport const TodoList = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector<RootState, TodosSlice>(state => state.todos);\n  return (\n    <div>\n      {Object.values(todos).map(todo => {\n        return (\n          <div className=\"flex\" key={todo.id}>\n            <label className=\"flex-1\">\n              <input\n                type=\"checkbox\"\n                onChange={() => dispatch(toggleTodo(todo.id))}\n              />\n              {todo.text}\n              <button style={{marginLeft: 30}} onClick={() => dispatch(removeTodo(todo.id))}>remove</button>\n            </label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { FormEvent } from \"react\";\nimport { createTodo, addTodo } from \"../../model/slices/todos\";\nimport { useDispatch } from \"react-redux\";\n\nexport const AddTodoForm = () => {\n  const [value, setValue] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleAddTodo = (event: FormEvent | MouseEvent) => {\n    event.preventDefault();\n\n    const todo = createTodo(value);\n\n    dispatch(addTodo(todo));\n\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleAddTodo}>\n      <input value={value} onChange={e => setValue(e.target.value)} />\n      <button onClick={handleAddTodo}>add</button>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { TodoList } from \"../components/TodoList/TodoList\";\nimport { AddTodoForm } from \"../components/TodoList/AddTodoForm\";\n\nexport const TodoListPage = () => {\n  return (\n    <div>\n      <h1>Todos</h1>\n      <AddTodoForm />\n      <TodoList />\n    </div>\n  );\n};\n","import React from \"react\";\r\n\r\nexport const BoardPage = () => <div>BoardPage</div>;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { User } from \"fake-auth\";\n\ninterface AuthSlice {\n  isAuthenticated: boolean;\n  user: User | null;\n  error: string | null;\n}\nconst initialState: AuthSlice = {\n  isAuthenticated: false,\n  user: null,\n  error: null\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    // we can directly return a new state object, as usual with immutable redux state\n    loginError(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n      state.isAuthenticated = false;\n    },\n    loginSuccess(state, action: PayloadAction<User>) {\n      state.error = null;\n      state.isAuthenticated = false;\n      state.user = action.payload;\n    },\n    // but because @reduxjs/toolkit is using immer.js, we can also seemingly mutate the state\n    logoutError(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n    },\n    logoutSuccess(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n    },\n    //\n    // be careful! you can not mix mutation and return style:\n    registerSuccess(state, action: PayloadAction<User>) {\n      // this would fail:\n      // state.isAuthenticated = true; // mutation creates draft state, but it would only be applied to actual state later\n      // return { ...state, user: action.payload }; // copy all properties from _current_ state object, losing mutations on the draft\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    },\n    registerError(state, action: PayloadAction<string>) {\n      state.error = action.payload;\n    }\n  }\n});\n\nexport const {\n  loginError,\n  loginSuccess,\n  logoutError,\n  logoutSuccess,\n  registerError,\n  registerSuccess\n} = authSlice.actions;\n\nexport default authSlice.reducer;\n\n// \"public\" thunks\n","import fakeAuth from \"fake-auth\";\nimport { AppThunk } from \"../store\";\nimport {\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  registerSuccess,\n  registerError\n} from \"../slices/auth\";\n\nconst wait = (delay: number) =>\n  new Promise(resolve => setTimeout(resolve, delay));\n\nexport const login = (\n  email: string,\n  password: string\n): AppThunk => async dispatch => {\n  try {\n    await wait(Math.random() * 1000);\n    const user = await fakeAuth.signin(email, password);\n    dispatch(loginSuccess(user));\n  } catch (error) {\n    dispatch(loginError(error.toString()));\n  }\n};\n\nexport const logout = (): AppThunk => async dispatch => {\n  try {\n    await fakeAuth.signout();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.toString()));\n  }\n};\n\nexport const register = (\n  email: string,\n  password: string\n): AppThunk => async dispatch => {\n  try {\n    await wait(Math.random() * 1000);\n    const user = await fakeAuth.signup(email, password);\n    dispatch(registerSuccess(user));\n  } catch (error) {\n    dispatch(registerError(error.toString()));\n  }\n};\n","import React, { FormEvent, ChangeEvent } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../model/rootReducer\";\nimport { register, login } from \"../../model/api/auth\";\n\ninterface FormState {\n  email: string;\n  password: string;\n}\n\nconst initialState: FormState = {\n  email: \"\",\n  password: \"\"\n};\n\nexport const LoginForm: React.FC = () => {\n  const dispatch = useDispatch();\n  const error = useSelector<RootState, string | null>(\n    state => state.auth.error\n  );\n\n  const [state, setState] = React.useState<FormState>(initialState);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleRegister = () => {\n    dispatch(register(state.email, state.password));\n  };\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    dispatch(login(state.email, state.password));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {error && <p>{error}</p>}\n      <input\n        value={state.email}\n        onChange={handleChange}\n        name=\"email\"\n        type=\"email\"\n        autoComplete=\"username\"\n        required\n      />\n      <input\n        value={state.password}\n        onChange={handleChange}\n        name=\"password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        required\n      />\n      <button type=\"submit\">Login</button>\n      <button type=\"button\" onClick={handleRegister}>\n        Register\n      </button>\n    </form>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"../model/rootReducer\";\nimport { User } from \"fake-auth\";\n\nexport function useAuthenticated() {\n  const user = useSelector<RootState, User | null>(state => state.auth.user);\n  return user !== null;\n}\n","import React from \"react\";\r\nimport { LoginForm } from \"../components/LoginForm/LoginForm\";\r\nimport { useAuthenticated } from \"../hooks/useAuthenticated\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\n\r\nexport const LoginPage = () => {\r\n  const isAuthenticated = useAuthenticated();\r\n  const location = useLocation<{ from: string }>();\r\n  const history = useHistory();\r\n  const { from } = location.state || { from: \"/\" };\r\n  React.useEffect(() => {\r\n    if (isAuthenticated && from) {\r\n      history.push(from);\r\n    }\r\n  }, [history, from, isAuthenticated]);\r\n  return (\r\n    <div>\r\n      <h1>Log in</h1>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nUserListView.propTypes = {\r\n  users: PropTypes.array\r\n};\r\nexport function UserListView({ users = [] }) {\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        {users.map(user => (\r\n          <tr key={user.id}>\r\n            <td>{user.id}</td>\r\n            <td>{user.username}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nUserListFilterView.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func\r\n};\r\nexport function UserListFilterView({ value, onChange }) {\r\n  return (\r\n    <form>\r\n      <input value={value} onChange={event => onChange(event.target.value)} />\r\n    </form>\r\n  );\r\n}\r\n","export function filterUsers(users, filter) {\r\n  if (filter) {\r\n    return users.filter(user => user.username.toLowerCase().match(filter.toLowerCase()));\r\n  } else {\r\n    return users;\r\n  }\r\n}\r\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { UserListView, UserListFilterView } from \"./views\";\nimport { filterUsers } from \"./utils\";\n\nexport function UserList({ url = process.env.REACT_APP_USERS_API }) {\n  const [state, setState] = React.useState({\n    allUsers: [],\n    visibleUsers: [],\n    filter: \"\"\n  });\n\n  const loadUsers = React.useCallback(async () => {\n    const { data } = await axios.get(url);\n    setState(prevState => ({\n      ...prevState,\n      allUsers: data,\n      visibleUsers: data\n    }));\n  }, [url]);\n\n  const applyFilter = React.useCallback(filter => {\n    setState(prevState => ({\n      // note how in javascript we could easily forget prevState\n      ...prevState,\n      filter,\n      visibleUsers: filterUsers(prevState.allUsers, filter)\n    }));\n  }, []);\n\n  React.useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  return (\n    <div>\n      <UserListFilterView value={state.filter} onChange={applyFilter} />\n      <UserListView users={state.visibleUsers} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { UserListView, UserListFilterView } from \"./views\";\nimport { filterUsers } from \"./utils\";\n\nexport class UserList extends React.Component {\n  state = {\n    allUsers: [],\n    visibleUsers: [],\n    filter: \"\"\n  };\n\n  componentDidMount() {\n    this.loadUsers();\n  }\n\n  render() {\n    return (\n      <div>\n        <UserListFilterView value={this.state.filter} onChange={this.applyFilter} />\n        <UserListView users={this.state.visibleUsers} />\n      </div>\n    );\n  }\n\n  async loadUsers() {\n    // note how in javascript you could easily make mistakes like:\n    // - \"const data =\" forgotten destructuring brackets\n    // - \"const { data } = axios.get\" forgotten await keyword\n    const { data } = await axios.get(process.env.REACT_APP_USERS_API);\n    this.setState({ allUsers: data, visibleUsers: data });\n  }\n\n  applyFilter = filter => {\n    const visibleUsers = filterUsers(this.state.allUsers, filter);\n    this.setState({ filter, visibleUsers });\n  };\n}\n","import React from \"react\";\r\nimport { UserList as FunctionalUserList } from \"../components/UserList/UserList.func\";\r\nimport { UserList as ClassBasedUserList } from \"../components/UserList/UserList.class\";\r\n\r\nexport class UsersPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"flex\">\r\n        <div className=\"flex-1\">\r\n          <FunctionalUserList />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <ClassBasedUserList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../model/rootReducer\";\n\nexport const CountersPage = () => {\n  return (\n    <div>\n      <h1>Reusing reducer logic</h1>\n      <p>\n        Based on{\" \"}\n        <a href=\"https://redux.js.org/recipes/structuring-reducers/reusing-reducer-logic/\">\n          reusing-reducer-logic\n        </a>\n      </p>\n      <Counter name=\"counterA\" />\n      <Counter name=\"counterB\" />\n      <Counter name=\"counterC\" />\n    </div>\n  );\n};\n\nfunction Counter({ name }: { name: \"counterA\" | \"counterB\" | \"counterC\" }) {\n  const dispatch = useDispatch();\n  const value = useSelector<RootState, number>(state => state[name]);\n  return (\n    <div>\n      <button onClick={() => dispatch({ type: \"DECREMENT\", name })}>-</button>\n      <code>{' '}{value}{' '}</code>\n      <button onClick={() => dispatch({ type: \"INCREMENT\", name })}>+</button>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuthenticated } from \"../../hooks/useAuthenticated\";\r\n\r\nexport function ProtectedRoute({ fallback = null, ...props }) {\r\n  const isLoggedIn = useAuthenticated();\r\n  if (!isLoggedIn) {\r\n    if (fallback) {\r\n      return fallback;\r\n    }\r\n    return (\r\n      <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n    );\r\n  }\r\n  return <Route {...props} />;\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useAuthenticated } from \"../../hooks/useAuthenticated\";\r\nimport { logout } from \"../../model/api/auth\";\r\n\r\nfunction LogoutButton({ redirect = \"\" }) {\r\n  const isAuthenticated = useAuthenticated();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    if (redirect) {\r\n      history.push(redirect);\r\n    }\r\n  };\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n  return <button onClick={handleLogout}>Log out</button>;\r\n}\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { useAuthenticated } from \"../../hooks/useAuthenticated\";\r\nimport LogoutButton from \"../LogoutButton/LogoutButton\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const HeaderLogin: React.FC = () => {\r\n  const isAuthenticated = useAuthenticated();\r\n\r\n  if (isAuthenticated) {\r\n    return <LogoutButton />;\r\n  }\r\n  return <NavLink to=\"/login\">Log in</NavLink>;\r\n};\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport qs from \"qs\";\n\nconst urlUtils = {\n  /** Parses the query params of a location object and returns an object */\n  getParams: str => qs.parse(str, { ignoreQueryPrefix: true }),\n\n  /** Returns the value of the page query param (\"?searchTerm=\" or \"&searchTerm=\") */\n  getSearchTerm: str => urlUtils.getParams(str).searchTerm,\n\n  /** Returns the value of the page query param (\"?page=\" or \"&page=\") */\n  getPageNumber: str => {\n    return urlUtils.getParams(str).page;\n  },\n\n  /**\n   * Returns the id part of a swapi entity URL.\n   * The last segment in the URL is the ID, e.g. \"https://swapi.co/api/people/1/\" -> \"1\"\n   * @param {string} url\n   * @return {string} the ID\n   */\n\n  getIdFromUrl: url => {\n    const parts = url.split(\"/\");\n    return parts[parts.length - 2];\n  }\n};\n\n// we will later reset state, so we keep initial value as extra object\nconst initialState = {\n  results: [],\n  isLoading: false,\n  previous: \"\",\n  next: \"\",\n  searchTerm: \"\"\n};\n\nexport default class SwapiPeopleSearchPage extends React.Component {\n  static defaultProps = {\n    apiUrl: \"https://swapi.co/api/people/\"\n  };\n  state = {\n    ...initialState\n  };\n\n  async componentDidMount() {\n    this.handleQueryParams(this.props.location.search);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location.search !== this.props.location.search) {\n      this.handleQueryParams(this.props.location.search);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.abortFetch) {\n      this.abortFetch();\n    }\n  }\n\n  render() {\n    const { previous, next, isLoading, searchTerm, results } = this.state;\n    return (\n      <div>\n        <header>\n          <h3>People search</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <input type=\"text\" onChange={this.handleInputChange} value={searchTerm} disabled={isLoading} />\n            <button type=\"submit\" disabled={isLoading}>\n              Search\n            </button>\n          </form>\n        </header>\n\n        {results.map(result => {\n          return (\n            <div key={result.url}>\n              <Link to={`/swapi/people/${urlUtils.getIdFromUrl(result.url)}`}> {result.name}</Link>\n            </div>\n          );\n        })}\n\n        <footer>\n          <nav>\n            {previous && (\n              <Link to={`/swapi/people/?searchTerm=${this.state.searchTerm}&page=${urlUtils.getPageNumber(previous)}`}>\n                prev\n              </Link>\n            )}\n            {next && (\n              <Link to={`/swapi/people/?searchTerm=${this.state.searchTerm}&page=${urlUtils.getPageNumber(next)}`}>\n                next\n              </Link>\n            )}\n          </nav>\n        </footer>\n      </div>\n    );\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.searchTerm) {\n      // you should _always_ encode strings you put in the URL!\n      this.props.history.push(`/swapi/people/?searchTerm=${encodeURIComponent(this.state.searchTerm || \"*\")}`);\n    } else {\n      this.props.history.push(`/swapi/people/`);\n    }\n  };\n\n  handleInputChange = event => {\n    this.setState({ searchTerm: event.target.value });\n  };\n\n  handleQueryParams(queryString) {\n    const { page, searchTerm } = urlUtils.getParams(queryString);\n    if (searchTerm) {\n      this.search(searchTerm, page);\n    } else {\n      this.setState(initialState);\n    }\n  }\n  async search(searchTerm, page) {\n    this.setState({ isLoading: true, searchTerm });\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n    this.abortFetch = () => controller.abort();\n\n    try {\n      const params = { format: \"json\" };\n      if (searchTerm !== \"*\") params.search = searchTerm;\n      if (page) params.page = page;\n\n      const url = `${this.props.apiUrl}${qs.stringify(params, { addQueryPrefix: true })}`;\n      const response = await fetch(url, { signal });\n      const { next, previous, results } = await response.json();\n      this.setState({ isLoading: false, previous, next, results });\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        console.error(\"search failed\", error);\n      }\n    }\n\n    this.abortFetch = null;\n  }\n}\n","import React from \"react\";\r\n\r\nexport default class SwapiPeopleResultPage extends React.Component {\r\n  render() {\r\n    const id = this.props.match.params.id;\r\n    return (\r\n      <div>\r\n        <h3>Star Wars API: Result {id}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport SwapiPeopleSearchPage from \"./SwapiPeopleSearchPage\";\nimport SwapiPeopleResultPage from \"./SwapiPeopleResultPage\";\nexport default class SwapiPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <h2>Star Wars API pages</h2>\n        <nav>\n          <Link to=\"/swapi/planets\">Planets</Link>\n          <Link to=\"/swapi/spaceships\">Spaceships</Link>\n          <Link to=\"/swapi/vehicles\">Vehicles</Link>\n          <Link to=\"/swapi/people\">People</Link>\n          <Link to=\"/swapi/films\">Films</Link>\n          <Link to=\"/swapi/species\">Species</Link>\n        </nav>\n        <Switch>\n          <Route exact path=\"/swapi/people(/?)\" component={SwapiPeopleSearchPage} />\n          <Route exact path=\"/swapi/people/:id/\" component={SwapiPeopleResultPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const StyledLink = styled(NavLink)<{ special?: boolean }>`\r\n  text-decoration: none;\r\n  &.active {\r\n    text-decoration: underline;\r\n  }\r\n  font-size: 50px;\r\n  color: ${props => (props.special ? \"hotpink\" : \"inherit\")};\r\n`;\r\n\r\nexport const StyledApp = styled.div`\r\n  > header,\r\n  main {\r\n    padding: 1em;\r\n  }\r\n  ${StyledLink}.active {\r\n    background: yellow;\r\n  }\r\n`;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Dashboard } from \"./pages/Dashboard\";\nimport { TodoListPage } from \"./pages/TodoListPage\";\nimport { BoardPage } from \"./pages/BoardPage\";\nimport { LoginPage } from \"./pages/LoginPage\";\nimport { UsersPage } from \"./pages/UsersPage\";\nimport { CountersPage } from \"./pages/CountersPage\";\n\nimport { ProtectedRoute } from \"./components/ProtectedRoute/ProtectedRoute\";\nimport { HeaderLogin } from \"./components/HeaderLogin/HeaderLogin\";\nimport SwapiPage from \"./pages/swapi/SwapiPage\";\nimport * as SC from \"./App.styled\";\n\nfunction App() {\n  return (\n    <Router>\n      <SC.StyledApp>\n        <header>\n          <nav>\n            <SC.StyledLink to=\"/\" exact>\n              Dashboard\n            </SC.StyledLink>\n            <SC.StyledLink to=\"/counters\">Counters</SC.StyledLink>\n            <SC.StyledLink to=\"/list\">Todo list</SC.StyledLink>\n            <SC.StyledLink to=\"/board\">Board</SC.StyledLink>\n            <SC.StyledLink to=\"/users\">Users</SC.StyledLink>\n            <SC.StyledLink to=\"/swapi\" special>\n              Start Wars API\n            </SC.StyledLink>\n            <span className=\"flex-1\" />\n            <HeaderLogin />\n          </nav>\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/counters\" component={CountersPage} />\n            <ProtectedRoute path=\"/list\" component={TodoListPage} />\n            <ProtectedRoute path=\"/board\" component={BoardPage} />\n            <ProtectedRoute path=\"/users\" component={UsersPage} />\n            <ProtectedRoute path=\"/swapi\" component={SwapiPage} />\n          </Switch>\n        </main>\n      </SC.StyledApp>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export function createNamedWrapperReducer(\r\n  reducerFunction: any,\r\n  reducerName: any\r\n) {\r\n  return (state: any, action: any) => {\r\n    const { name } = action;\r\n    const isInitializationCall = state === undefined;\r\n    if (name !== reducerName && !isInitializationCall) {\r\n      return state;\r\n    }\r\n    return reducerFunction(state, action);\r\n  };\r\n}\r\n","export function counter(state = 0, action: any) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return state + 1;\r\n    case \"DECREMENT\":\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./slices/auth\";\nimport todosReducer from \"./slices/todos\";\nimport { createNamedWrapperReducer } from \"./utils\";\nimport { counter } from \"./reducers/counter\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todos: todosReducer,\n  counterA: createNamedWrapperReducer(counter, \"counterA\"),\n  counterB: createNamedWrapperReducer(counter, \"counterB\"),\n  counterC: createNamedWrapperReducer(counter, \"counterC\")\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nexport default store;\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./model/store\";\n\nfunction renderApp() {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (process.env.NODE_ENV !== \"production\" && module.hot) {\n  module.hot.accept(\"./App\", renderApp);\n}\n\nrenderApp();\n"],"sourceRoot":""}